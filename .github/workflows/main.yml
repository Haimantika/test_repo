name: Assign issue to contributor
on:
  issue_comment:
    types: [created]

jobs:
  assign:
    name: Take an issue
    runs-on: ubuntu-latest
    permissions:
      issues: read
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Extract issue and user information and check comment
      run: |
        COMMENT_BODY=$(jq --raw-output .comment.body "$GITHUB_EVENT_PATH")
        if [[ "$COMMENT_BODY" != ".take" ]]; then
          echo "Comment does not contain '.take', exiting..."
          exit 0
        fi

        COMMENTER=$(jq --raw-output .comment.user.login "$GITHUB_EVENT_PATH")
        REPO_FULL_NAME=$(jq --raw-output .repository.full_name "$GITHUB_EVENT_PATH")
        ISSUE_NUMBER=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")
        echo "Processing with user: $COMMENTER on issue $ISSUE_NUMBER in repo $REPO_FULL_NAME"

    - name: Fetch issue labels and check contributor status
      run: |
        LABELS_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/$REPO_FULL_NAME/issues/$ISSUE_NUMBER/labels")
        echo "Labels response: $LABELS_RESPONSE"
        if echo "$LABELS_RESPONSE" | jq -e '.message' >/dev/null; then
          echo "Error fetching labels: $(echo "$LABELS_RESPONSE" | jq -r '.message')"
          exit 1
        fi

        HAS_GOOD_FIRST_ISSUE_LABEL=$(echo "$LABELS_RESPONSE" | jq '[.[] | select(.name == "good first issue")] | length')
        echo "Good first issue label presence: $HAS_GOOD_FIRST_ISSUE_LABEL"

        CONTRIBUTIONS_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/$REPO_FULL_NAME/commits?author=$COMMENTER")
        echo "Contributions response: $CONTRIBUTIONS_RESPONSE"
        if echo "$CONTRIBUTIONS_RESPONSE" | jq -e '.message' >/dev/null; then
          echo "Error checking contributions: $(echo "$CONTRIBUTIONS_RESPONSE" | jq -r '.message')"
          exit 1
        fi

        HAS_CONTRIBUTED=$(echo "$CONTRIBUTIONS_RESPONSE" | jq '. | length > 0')
        echo "Contributed: $HAS_CONTRIBUTED"
        fi
