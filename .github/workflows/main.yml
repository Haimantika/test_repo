name: Assign issue to contributor
on:
  issue_comment:
    types: [created]

jobs:
  assign:
    name: Take an issue
    runs-on: ubuntu-latest
    permissions:
      issues: write  # Updated to write to allow modification of issue assignments
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Extract issue and user information and check comment
      run: |
        COMMENT_BODY=$(jq --raw-output .comment.body "$GITHUB_EVENT_PATH")
        if [[ "$COMMENT_BODY" != ".take" ]]; then
          echo "Comment does not contain '.take', exiting..."
          exit 0
        fi

        COMMENTER=$(jq --raw-output .comment.user.login "$GITHUB_EVENT_PATH")
        REPO_FULL_NAME=$(jq --raw-output .repository.full_name "$GITHUB_EVENT_PATH")
        ISSUE_NUMBER=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")
        echo "Processing with user: $COMMENTER on issue $ISSUE_NUMBER in repo $REPO_FULL_NAME"

    - name: Fetch issue labels and check contributor status
      run: |
        # Check if the user has previously contributed to a 'good first issue'
        CONTRIBUTIONS_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/search/issues?q=author:$COMMENTER+label:\"good first issue\"+repo:$REPO_FULL_NAME")
        CONTRIBUTED_TO_GFI=$(echo "$CONTRIBUTIONS_RESPONSE" | jq '.total_count > 0')

        if [[ $CONTRIBUTED_TO_GFI == true ]]; then
          echo "Error: You have already contributed to a 'good first issue' in this repository and are not eligible to take this issue."
          exit 1
        else
          # Assign the issue
          ASSIGNMENT_RESPONSE=$(curl -s -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" -d "{\"assignees\": [\"$COMMENTER\"]}" "https://api.github.com/repos/$REPO_FULL_NAME/issues/$ISSUE_NUMBER/assignees")
          echo "Issue $ISSUE_NUMBER has been successfully assigned to $COMMENTER."
        fi
      shell: bash
