name: Assign issue to contributor
on:
  issue_comment:
    types: [created]

jobs:
  assign:
    name: Take an issue
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
    - name: Dump GitHub event payload
      run: cat "$GITHUB_EVENT_PATH"

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Determine contributor status and fetch issue labels
      run: |
        # Extract data from the GitHub event payload
        COMMENTER=$(jq --raw-output .comment.user.login "$GITHUB_EVENT_PATH")
        REPO_FULL_NAME=$(jq --raw-output .repository.full_name "$GITHUB_EVENT_PATH")
        ISSUE_NUMBER=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")

        # Check for previous contributions
        RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/$REPO_FULL_NAME/commits?author=$COMMENTER")
        HAS_CONTRIBUTED=$(echo "$RESPONSE" | jq '. | length > 0' | tr -d '\n')
        echo "HAS_CONTRIBUTED=$HAS_CONTRIBUTED" >> $GITHUB_ENV

        # Fetching labels from the issue and checking for 'good first issue'
        LABELS_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/$REPO_FULL_NAME/issues/$ISSUE_NUMBER/labels")
        HAS_GOOD_FIRST_ISSUE_LABEL=$(echo "$LABELS_JSON" | jq '[.[] | select(.name == "good first issue")] | length > 0' | tr -d '\n')
        echo "HAS_GOOD_FIRST_ISSUE_LABEL=$HAS_GOOD_FIRST_ISSUE_LABEL" >> $GITHUB_ENV

    - name: Assign issue based on conditions
      run: |
        if [[ "$HAS_CONTRIBUTED" == "false" ]] || [[ "$HAS_CONTRIBUTED" == "true" && "$HAS_GOOD_FIRST_ISSUE_LABEL" == "false" ]]; then
          # Post a message and assign the issue
          MESSAGE="This issue is now assigned to you. Thank you for your contributions!"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"body\": \"$MESSAGE\"}" "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"assignees\": [\"$COMMENTER\"]}" "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/assignees"
        else
          # Notify the commenter that the issue is reserved for new contributors
          MESSAGE="Thank you for your interest, but this 'good first issue' is reserved for new contributors."
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"body\": \"$MESSAGE\"}" "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments"

      env:
        HAS_CONTRIBUTED: ${{ env.HAS_CONTRIBUTED }}
        HAS_GOOD_FIRST_ISSUE_LABEL: ${{ env.HAS_GOOD_FIRST_ISSUE_LABEL }}
        COMMENTER: ${{ env.COMMENTER }}
