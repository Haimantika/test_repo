name: Assign issue to contributor
on:
  issue_comment:
    types: [created]

jobs:
  assign:
    name: Take an issue
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check if the comment is '.take'
      run: |
        COMMENT_BODY=$(jq --raw-output .comment.body "$GITHUB_EVENT_PATH")
        if [[ "$COMMENT_BODY" != ".take" ]]; then
          echo "The comment was not '.take'. Exiting workflow."
          exit 0
        fi
        echo "Comment contains '.take', proceeding..."
        
        # Set environment variables for use in later steps
        echo "COMMENTER=$(jq --raw-output .comment.user.login "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
        echo "REPO_FULL_NAME=$(jq --raw-output .repository.full_name "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
        echo "ISSUE_NUMBER=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV

    - name: Check if the user is a new contributor and fetch issue labels
      run: |
        RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/$REPO_FULL_NAME/commits?author=$COMMENTER")
        HAS_CONTRIBUTED=$(echo "$RESPONSE" | jq '. | length > 0' | tr -d '\n')
        echo "HAS_CONTRIBUTED=$HAS_CONTRIBUTED" >> $GITHUB_ENV

        LABELS_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/$REPO_FULL_NAME/issues/$ISSUE_NUMBER/labels")
        HAS_GOOD_FIRST_ISSUE_LABEL=$(echo "$LABELS_JSON" | jq '[.[] | select(.name == "good first issue")] | length > 0' | tr -d '\n')
        echo "HAS_GOOD_FIRST_ISSUE_LABEL=$HAS_GOOD_FIRST_ISSUE_LABEL" >> $GITHUB_ENV

    - name: Assign issue based on conditions
      if: env.HAS_CONTRIBUTED != '' # Only run this step if the checks have been made
      run: |
        if [[ "$HAS_CONTRIBUTED" == "true" && "$HAS_GOOD_FIRST_ISSUE_LABEL" == "0" ]] || [[ "$HAS_CONTRIBUTED" == "false" ]]; then
          MESSAGE="This issue is now assigned to you. Thank you for your contributions!"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"body\": \"$MESSAGE\"}" "https://api.github.com/repos/$REPO_FULL_NAME/issues/$ISSUE_NUMBER/comments"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"assignees\": [\"$COMMENTER\"]}" "https://api.github.com/repos/$REPO_FULL_NAME/issues/$ISSUE_NUMBER/assignees"
        else
          MESSAGE="Thank you for your interest, but this 'good first issue' is reserved for new contributors."
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"body\": \"$MESSAGE\"}" "https://api.github.com/repos/$REPO_FULL_NAME/issues/$ISSUE_NUMBER/comments"
        fi
