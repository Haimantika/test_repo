name: contributor-takes-action
description: This action assigns yourself to an issue for a repo you are not a contributor to.
author: Brian Douglas
branding:
  icon: 'thumbs-up'
  color: 'white'

inputs:
  message:
    description: 'Message to prospective contributor'
    required: false
    default: 'You are now assigned to this issue. Thank you for contributing!'
  issueCurrentlyAssignedMessage:
    description: 'Message to contributors if issue is already assigned'
    required: false
    default: 'This issue is already assigned. Please consider taking other issues.'

  blockingLabels:
    description: 'Comma-separated labels that block an issue from being assigned by the trigger.'
    required: false
    default: 'good first issue'

  blockingLabelsMessage:
    description: 'Message to contributors if issue is blocked by a label'
    required: false
    default: 'This issue is reserved for new contributors.'

  recurringContributorMessage:
    description: 'Message to contributors who have already contributed to the project.'
    required: false
    default: 'Thank you for your interest, but please consider letting new contributors take this issue.'

  trigger:
    description: 'The string that triggers the action'
    required: false
    default: '.take'
  token:
    description: 'The GitHub PAT used to authenticate when updating the Issue'
    required: true

runs:
  using: "composite"
  steps:
    - run: |
        check_if_contributed_to_project() {
            local assignee="$1"
            local response=$(curl -s -H "Authorization: token $GITHUB_PAT" "https://api.github.com/search/issues?q=is:pr+author:$assignee")
            local total_count=$(echo "$response" | jq -r '.total_count')

            if [ "$total_count" -gt 0 ]; then
                echo "true"
            else
                echo "false"
            fi
        }

        BODY="$(jq '.comment.body' $GITHUB_EVENT_PATH)"
        ISSUE_NUMBER="$(jq '.issue.number' $GITHUB_EVENT_PATH)"
        LOGIN="$(jq '.comment.user.login' $GITHUB_EVENT_PATH | tr -d \")"
        REPO="$(jq '.repository.full_name' $GITHUB_EVENT_PATH | tr -d \")"
        ISSUE_LABELS="$(jq -r '.issue.labels[].name' $GITHUB_EVENT_PATH | jq -s .)"
        ISSUE_CURRENTLY_ASSIGNED=$(jq '.issue.assignees | length == 0' $GITHUB_EVENT_PATH)

        if [[ $BODY == *"$INPUT_TRIGGER"* ]]; then
          BLOCKING_LABELS=(${RAW_BLOCKING_LABELS//,/ })
          HAS_BLOCKING_LABEL="false"
          for label in "${BLOCKING_LABELS[@]}"; do
            if [[ "$ISSUE_LABELS" == *"$label"* ]]; then
              HAS_BLOCKING_LABEL="true"
              break
            fi
          done

          if [[ "$HAS_BLOCKING_LABEL" == "true" ]]; then
            echo "$BLOCKING_LABELS_MESSAGE"
            curl -X POST -H "Authorization: token $GITHUB_PAT" -d "{\"body\": \"$BLOCKING_LABELS_MESSAGE\"}" "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments"
          elif [[ "$ISSUE_CURRENTLY_ASSIGNED" == "false" ]]; then
            echo "$ISSUE_CURRENTLY_ASSIGNED_MESSAGE"
            curl -X POST -H "Authorization: token $GITHUB_PAT" -d "{\"body\": \"$ISSUE_CURRENTLY_ASSIGNED_MESSAGE\"}" "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments"
          else
            curl -H "Authorization: token $GITHUB_PAT" -X POST -d "{\"assignees\": [\"$LOGIN\"]}" "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/assignees"
            curl -X POST -H "Authorization: token $GITHUB_PAT" -d "{\"body\": \"$INPUT_MESSAGE\"}" "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments"
          fi
        fi
      shell: bash
      env:
        INPUT_MESSAGE: "${{ inputs.message }}"
        RAW_BLOCKING_LABELS: "${{ inputs.blockingLabels }}"
        BLOCKING_LABELS_MESSAGE: "${{ inputs.blockingLabelsMessage }}"
        INPUT_TRIGGER: "${{ inputs.trigger }}"
        ISSUE_CURRENTLY_ASSIGNED_MESSAGE: "${{ inputs.issueCurrentlyAssignedMessage }}"
        GITHUB_PAT: "${{ inputs.token }}"

